{"ast":null,"code":"var _jsxFileName = \"/Users/mikolajlesniczuk/Documents/zadanie/test/bookmark/src/components/modalDelay/modalDelay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport s from \"./modalDelay.module.scss\";\nimport { Modal } from \"./modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalDelay = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [hasModalBeenClosed, setHasModalBeenClosed] = useState(false);\n  useEffect(() => {\n    let timerIdTimeout;\n    const handleTimeout = () => {\n      if (!hasModalBeenClosed) {\n        setIsModalOpen(true);\n      }\n    };\n\n    // Uruchomienie modala po 30 sekundach od wejścia na stronę\n    timerIdTimeout = setTimeout(handleTimeout, 30000);\n    return () => {\n      clearTimeout(timerIdTimeout);\n    };\n  }, [hasModalBeenClosed]);\n  const handleMouseOver = () => {\n    if (!isModalOpen && !hasModalBeenClosed) {\n      setIsModalOpen(true);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setHasModalBeenClosed(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseOver: handleMouseOver,\n    children: isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.modalOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.modalContent,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            children: \"XX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalDelay, \"UffNx9UXhI7Yqc90nEglQZw88wA=\");\n_c = ModalDelay;\nvar _c;\n$RefreshReg$(_c, \"ModalDelay\");","map":{"version":3,"names":["React","useState","useEffect","s","Modal","jsxDEV","_jsxDEV","ModalDelay","_s","isModalOpen","setIsModalOpen","hasModalBeenClosed","setHasModalBeenClosed","timerIdTimeout","handleTimeout","setTimeout","clearTimeout","handleMouseOver","closeModal","onMouseOver","children","className","modalOverlay","modalContent","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mikolajlesniczuk/Documents/zadanie/test/bookmark/src/components/modalDelay/modalDelay.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport s from \"./modalDelay.module.scss\";\nimport { Modal } from \"./modal\";\n\nexport const ModalDelay = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [hasModalBeenClosed, setHasModalBeenClosed] = useState(false);\n\n  useEffect(() => {\n    let timerIdTimeout;\n\n    const handleTimeout = () => {\n      if (!hasModalBeenClosed) {\n        setIsModalOpen(true);\n      }\n    };\n\n    // Uruchomienie modala po 30 sekundach od wejścia na stronę\n    timerIdTimeout = setTimeout(handleTimeout, 30000);\n\n    return () => {\n      clearTimeout(timerIdTimeout);\n    };\n  }, [hasModalBeenClosed]);\n\n  const handleMouseOver = () => {\n    if (!isModalOpen && !hasModalBeenClosed) {\n      setIsModalOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setHasModalBeenClosed(true);\n  };\n\n  return (\n    <div onMouseOver={handleMouseOver}>\n      {isModalOpen && (\n        <div className={s.modalOverlay}>\n          <div className={s.modalContent}>\n            <div>\n              <div onClick={closeModal}>XX</div>\n              <Modal />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,0BAA0B;AACxC,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnEC,SAAS,CAAC,MAAM;IACd,IAAIW,cAAc;IAElB,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1B,IAAI,CAACH,kBAAkB,EAAE;QACvBD,cAAc,CAAC,IAAI,CAAC;MACtB;IACF,CAAC;;IAED;IACAG,cAAc,GAAGE,UAAU,CAACD,aAAa,EAAE,KAAK,CAAC;IAEjD,OAAO,MAAM;MACXE,YAAY,CAACH,cAAc,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CAACF,kBAAkB,CAAC,CAAC;EAExB,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACR,WAAW,IAAI,CAACE,kBAAkB,EAAE;MACvCD,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBR,cAAc,CAAC,KAAK,CAAC;IACrBE,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,oBACEN,OAAA;IAAKa,WAAW,EAAEF,eAAgB;IAAAG,QAAA,EAC/BX,WAAW,iBACVH,OAAA;MAAKe,SAAS,EAAElB,CAAC,CAACmB,YAAa;MAAAF,QAAA,eAC7Bd,OAAA;QAAKe,SAAS,EAAElB,CAAC,CAACoB,YAAa;QAAAH,QAAA,eAC7Bd,OAAA;UAAAc,QAAA,gBACEd,OAAA;YAAKkB,OAAO,EAAEN,UAAW;YAAAE,QAAA,EAAC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClCtB,OAAA,CAACF,KAAK;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9CWD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}