{"ast":null,"code":"var _jsxFileName = \"/Users/mikolajlesniczuk/Documents/zadanie/test2/myapp/src/components/modal/modal.jsx\",\n  _s = $RefreshSig$();\n// import s from \"./modal.module.scss\";\n\n// export const ModalZap = ({ closeModal }) => {\n//   return (\n//     <div className={s.bg}>\n//       <div className={s.bgmodal}>\n//         <p className={s.close} onClick={closeModal}>\n//           X\n//         </p>\n//         <form>\n//           <div className={s.flex}>\n//             <label className={s.title}>email</label>\n//             <input type=\"email\" placeholder=\"Twój email\"></input>\n//           </div>\n//           <div className={s.flex}>\n//             <label className={s.title}>telefon</label>\n//             <input type=\"tel\" placeholder=\"telefon\"></input>\n//           </div>\n//           <div className={s.flex}>\n//             <label className={s.title}> treść zapytania</label>\n//             <input\n//               className={s.text}\n//               type=\"text\"\n//               placeholder=\"treść zapytania\"\n//             ></input>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\nimport React, { useState } from \"react\";\nimport nodemailer from \"nodemailer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    from: \"alpimix.kontakt@gmail.com\",\n    to: \"\",\n    subject: \"\",\n    text: \"\"\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const config = {\n      host: \"smtp.sendgrid.net\",\n      port: 587,\n      secure: true,\n      auth: {\n        user: \"apikey\",\n        pass: process.env.API_KEY\n      }\n    };\n    const transporter = nodemailer.createTransport(config);\n    const emailOptions = {\n      from: formData.from,\n      to: formData.to,\n      subject: formData.subject,\n      text: formData.text\n    };\n    try {\n      const info = await transporter.sendMail(emailOptions);\n      console.log(info);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"To:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"to\",\n        value: formData.to,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Subject:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"subject\",\n        value: formData.subject,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        value: formData.text,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailForm, \"AWlr97daReJ1+TicFbgQRVdLNHg=\");\n_c = EmailForm;\nexport default EmailForm;\nvar _c;\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["React","useState","nodemailer","jsxDEV","_jsxDEV","EmailForm","_s","formData","setFormData","from","to","subject","text","handleInputChange","e","name","value","target","handleFormSubmit","preventDefault","config","host","port","secure","auth","user","pass","process","env","API_KEY","transporter","createTransport","emailOptions","info","sendMail","console","log","error","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mikolajlesniczuk/Documents/zadanie/test2/myapp/src/components/modal/modal.jsx"],"sourcesContent":["// import s from \"./modal.module.scss\";\n\n// export const ModalZap = ({ closeModal }) => {\n//   return (\n//     <div className={s.bg}>\n//       <div className={s.bgmodal}>\n//         <p className={s.close} onClick={closeModal}>\n//           X\n//         </p>\n//         <form>\n//           <div className={s.flex}>\n//             <label className={s.title}>email</label>\n//             <input type=\"email\" placeholder=\"Twój email\"></input>\n//           </div>\n//           <div className={s.flex}>\n//             <label className={s.title}>telefon</label>\n//             <input type=\"tel\" placeholder=\"telefon\"></input>\n//           </div>\n//           <div className={s.flex}>\n//             <label className={s.title}> treść zapytania</label>\n//             <input\n//               className={s.text}\n//               type=\"text\"\n//               placeholder=\"treść zapytania\"\n//             ></input>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\nimport React, { useState } from \"react\";\nimport nodemailer from \"nodemailer\";\n\nconst EmailForm = () => {\n  const [formData, setFormData] = useState({\n    from: \"alpimix.kontakt@gmail.com\",\n    to: \"\",\n    subject: \"\",\n    text: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      host: \"smtp.sendgrid.net\",\n      port: 587,\n      secure: true,\n      auth: {\n        user: \"apikey\",\n        pass: process.env.API_KEY,\n      },\n    };\n\n    const transporter = nodemailer.createTransport(config);\n    const emailOptions = {\n      from: formData.from,\n      to: formData.to,\n      subject: formData.subject,\n      text: formData.text,\n    };\n\n    try {\n      const info = await transporter.sendMail(emailOptions);\n      console.log(info);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <label>\n        To:\n        <input\n          type=\"email\"\n          name=\"to\"\n          value={formData.to}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        Subject:\n        <input\n          type=\"text\"\n          name=\"subject\"\n          value={formData.subject}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        Message:\n        <textarea\n          name=\"text\"\n          value={formData.text}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Send</button>\n    </form>\n  );\n};\n\nexport default EmailForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}