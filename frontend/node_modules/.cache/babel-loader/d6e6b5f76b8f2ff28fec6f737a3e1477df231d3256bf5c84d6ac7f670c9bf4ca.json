{"ast":null,"code":"const sgMail = require(\"@sendgrid/mail\");\nsgMail.setApiKey(process.env.SENDGRID_API_KEY);\nconst sendEmail = () => {\n  const msg = {\n    to: \"mikolaj.lesniczuk@gmail.com\",\n    from: \"alpimix.kontakt@gmail.com\",\n    subject: \"Sending with SendGrid is Fun\",\n    text: \"and easy to do anywhere, even with Node.js\",\n    html: \"<strong>and easy to do anywhere, even with Node.js</strong>\"\n  };\n  return sgMail.send(msg);\n};\nmodule.exports = {\n  sendEmail\n};\n// export const sendEmail = async () => {\n//   const apiKey = process.env.SENDGRID_API_KEY;\n//   const url = \"https://api.sendgrid.com/v3/mail/send\";\n\n//   const data = {\n//     personalizations: [\n//       {\n//         to: [{ email: \"mikolaj.lesniczuk@gmail.com\" }],\n//         subject: \"Sending with SendGrid is Fun\",\n//       },\n//     ],\n//     from: { email: \"alpimix.kontakt@gmail.com\" },\n//     content: [\n//       {\n//         type: \"text/plain\",\n//         value: \"and easy to do anywhere, even with Node.js\",\n//       },\n//     ],\n//   };\n\n//   try {\n//     const response = await fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${apiKey}`,\n//       },\n//       body: JSON.stringify(data),\n//     });\n\n//     if (response.ok) {\n//       console.log(\"Email sent\");\n//     } else {\n//       console.error(\"Failed to send email\");\n//     }\n//   } catch (error) {\n//     console.error(\"Error sending email:\", error);\n//   }\n// };","map":{"version":3,"names":["sgMail","require","setApiKey","process","env","SENDGRID_API_KEY","sendEmail","msg","to","from","subject","text","html","send","module","exports"],"sources":["/Users/mikolajlesniczuk/Documents/zadanie/test2/myapp/src/components/mailer/mailer.js"],"sourcesContent":["const sgMail = require(\"@sendgrid/mail\");\nsgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\nconst sendEmail = () => {\n  const msg = {\n    to: \"mikolaj.lesniczuk@gmail.com\",\n    from: \"alpimix.kontakt@gmail.com\",\n    subject: \"Sending with SendGrid is Fun\",\n    text: \"and easy to do anywhere, even with Node.js\",\n    html: \"<strong>and easy to do anywhere, even with Node.js</strong>\",\n  };\n\n  return sgMail.send(msg);\n};\n\nmodule.exports = { sendEmail };\n// export const sendEmail = async () => {\n//   const apiKey = process.env.SENDGRID_API_KEY;\n//   const url = \"https://api.sendgrid.com/v3/mail/send\";\n\n//   const data = {\n//     personalizations: [\n//       {\n//         to: [{ email: \"mikolaj.lesniczuk@gmail.com\" }],\n//         subject: \"Sending with SendGrid is Fun\",\n//       },\n//     ],\n//     from: { email: \"alpimix.kontakt@gmail.com\" },\n//     content: [\n//       {\n//         type: \"text/plain\",\n//         value: \"and easy to do anywhere, even with Node.js\",\n//       },\n//     ],\n//   };\n\n//   try {\n//     const response = await fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${apiKey}`,\n//       },\n//       body: JSON.stringify(data),\n//     });\n\n//     if (response.ok) {\n//       console.log(\"Email sent\");\n//     } else {\n//       console.error(\"Failed to send email\");\n//     }\n//   } catch (error) {\n//     console.error(\"Error sending email:\", error);\n//   }\n// };\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACxCD,MAAM,CAACE,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,GAAG,GAAG;IACVC,EAAE,EAAE,6BAA6B;IACjCC,IAAI,EAAE,2BAA2B;IACjCC,OAAO,EAAE,8BAA8B;IACvCC,IAAI,EAAE,4CAA4C;IAClDC,IAAI,EAAE;EACR,CAAC;EAED,OAAOZ,MAAM,CAACa,IAAI,CAACN,GAAG,CAAC;AACzB,CAAC;AAEDO,MAAM,CAACC,OAAO,GAAG;EAAET;AAAU,CAAC;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}