{"ast":null,"code":"var _jsxFileName = \"/Users/mikolajlesniczuk/Documents/zadanie/test/bookmark/src/components/newsletter/newsletter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport s from \"./newsletter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatNumber = number => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\nexport const Newsletter = () => {\n  _s();\n  const [count, setCount] = useState(35000);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCount(prevCount => Math.max(0, prevCount - Math.ceil(35000 / 2000)));\n    }, 10);\n    setTimeout(() => {\n      clearInterval(intervalId);\n    }, 20000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.bg,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.count,\n        children: [formatNumber(count), \"+ Already Joined\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.stay,\n        children: \"Stay up-to-date with what we`re doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.flex,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          placeholder: \"Enter your email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.btn,\n          children: \" Contact us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Newsletter, \"0pRAL7cK4QXb53VzEcap+7AzG5E=\");\n_c = Newsletter;\nvar _c;\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["React","useState","useEffect","s","jsxDEV","_jsxDEV","Fragment","_Fragment","formatNumber","number","toString","replace","Newsletter","_s","count","setCount","intervalId","setInterval","prevCount","Math","max","ceil","setTimeout","clearInterval","children","className","bg","fileName","_jsxFileName","lineNumber","columnNumber","stay","flex","input","placeholder","btn","_c","$RefreshReg$"],"sources":["/Users/mikolajlesniczuk/Documents/zadanie/test/bookmark/src/components/newsletter/newsletter.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport s from \"./newsletter.module.css\";\n\nconst formatNumber = (number) => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport const Newsletter = () => {\n  const [count, setCount] = useState(35000);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCount((prevCount) => Math.max(0, prevCount - Math.ceil(35000 / 2000)));\n    }, 10);\n\n    setTimeout(() => {\n      clearInterval(intervalId);\n    }, 20000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <>\n      <div className={s.bg}>\n        <div className={s.count}>{formatNumber(count)}+ Already Joined</div>\n        <div className={s.stay}>Stay up-to-date with what we`re doing</div>\n        <div className={s.flex}>\n          <input\n            className={s.input}\n            placeholder=\"Enter your email address\"\n          ></input>\n          <button className={s.btn}> Contact us</button>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,YAAY,GAAIC,MAAM,IAAK;EAC/B,OAAOA,MAAM,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;AAChE,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCF,QAAQ,CAAEG,SAAS,IAAKC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,SAAS,GAAGC,IAAI,CAACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC,EAAE,EAAE,CAAC;IAENC,UAAU,CAAC,MAAM;MACfC,aAAa,CAACP,UAAU,CAAC;IAC3B,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAMO,aAAa,CAACP,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAKoB,SAAS,EAAEtB,CAAC,CAACuB,EAAG;MAAAF,QAAA,gBACnBnB,OAAA;QAAKoB,SAAS,EAAEtB,CAAC,CAACW,KAAM;QAAAU,QAAA,GAAEhB,YAAY,CAACM,KAAK,CAAC,EAAC,kBAAgB;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpEzB,OAAA;QAAKoB,SAAS,EAAEtB,CAAC,CAAC4B,IAAK;QAAAP,QAAA,EAAC;MAAqC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnEzB,OAAA;QAAKoB,SAAS,EAAEtB,CAAC,CAAC6B,IAAK;QAAAR,QAAA,gBACrBnB,OAAA;UACEoB,SAAS,EAAEtB,CAAC,CAAC8B,KAAM;UACnBC,WAAW,EAAC;QAA0B;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACTzB,OAAA;UAAQoB,SAAS,EAAEtB,CAAC,CAACgC,GAAI;UAAAX,QAAA,EAAC;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACjB,EAAA,CA9BWD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}