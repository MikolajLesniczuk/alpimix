{"ast":null,"code":"var _jsxFileName = \"/Users/mikolajlesniczuk/Documents/zadanie/test/bookmark/src/components/newsletter/newsletter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport s from \"./newsletter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatNumber = number => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\nexport const Newsletter = () => {\n  _s();\n  const [count, setCount] = useState(35000);\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleInputChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleButtonClick = () => {\n    if (!email || !email.includes(\"@\")) {\n      setError(\"Invalid email address. Email must included @ or be not empty\");\n      return;\n    }\n    setError(\"\");\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCount(prevCount => Math.max(0, prevCount - Math.ceil(35000 / 2000)));\n    }, 10);\n    setTimeout(() => {\n      clearInterval(intervalId);\n    }, 20000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.bg,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.count,\n        children: [formatNumber(count), \" + Already Joined\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.stay,\n        children: \"Stay up-to-date with what we`re doing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.flex,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          placeholder: \"Enter your email address\",\n          value: email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.btn,\n          onClick: handleButtonClick,\n          children: \"Contact us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Newsletter, \"mSgtW8M0iC1Z8NK4UFL7DXg82TA=\");\n_c = Newsletter;\nvar _c;\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["React","useState","useEffect","s","jsxDEV","_jsxDEV","Fragment","_Fragment","formatNumber","number","toString","replace","Newsletter","_s","count","setCount","email","setEmail","error","setError","handleInputChange","e","target","value","handleButtonClick","includes","intervalId","setInterval","prevCount","Math","max","ceil","setTimeout","clearInterval","children","className","bg","fileName","_jsxFileName","lineNumber","columnNumber","stay","flex","input","placeholder","onChange","btn","onClick","_c","$RefreshReg$"],"sources":["/Users/mikolajlesniczuk/Documents/zadanie/test/bookmark/src/components/newsletter/newsletter.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport s from \"./newsletter.module.css\";\n\nconst formatNumber = (number) => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport const Newsletter = () => {\n  const [count, setCount] = useState(35000);\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleButtonClick = () => {\n    if (!email || !email.includes(\"@\")) {\n      setError(\"Invalid email address. Email must included @ or be not empty\");\n      return;\n    }\n    setError(\"\");\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCount((prevCount) => Math.max(0, prevCount - Math.ceil(35000 / 2000)));\n    }, 10);\n\n    setTimeout(() => {\n      clearInterval(intervalId);\n    }, 20000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <>\n      <div className={s.bg}>\n        <div className={s.count}>{formatNumber(count)} + Already Joined</div>\n        <div className={s.stay}>Stay up-to-date with what we`re doing</div>\n        <div className={s.flex}>\n          <input\n            className={s.input}\n            placeholder=\"Enter your email address\"\n            value={email}\n            onChange={handleInputChange}\n          ></input>\n          {error && <div className={s.error}>{error}</div>}\n\n          <button className={s.btn} onClick={handleButtonClick}>\n            Contact us\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,YAAY,GAAIC,MAAM,IAAK;EAC/B,OAAOA,MAAM,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;AAChE,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMmB,iBAAiB,GAAIC,CAAC,IAAK;IAC/BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACR,KAAK,IAAI,CAACA,KAAK,CAACS,QAAQ,CAAC,GAAG,CAAC,EAAE;MAClCN,QAAQ,CAAC,8DAA8D,CAAC;MACxE;IACF;IACAA,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMwB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCZ,QAAQ,CAAEa,SAAS,IAAKC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,SAAS,GAAGC,IAAI,CAACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC,EAAE,EAAE,CAAC;IAENC,UAAU,CAAC,MAAM;MACfC,aAAa,CAACP,UAAU,CAAC;IAC3B,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAMO,aAAa,CAACP,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACE7B,OAAA;MAAK8B,SAAS,EAAEhC,CAAC,CAACiC,EAAG;MAAAF,QAAA,gBACnB7B,OAAA;QAAK8B,SAAS,EAAEhC,CAAC,CAACW,KAAM;QAAAoB,QAAA,GAAE1B,YAAY,CAACM,KAAK,CAAC,EAAC,mBAAiB;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrEnC,OAAA;QAAK8B,SAAS,EAAEhC,CAAC,CAACsC,IAAK;QAAAP,QAAA,EAAC;MAAqC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnEnC,OAAA;QAAK8B,SAAS,EAAEhC,CAAC,CAACuC,IAAK;QAAAR,QAAA,gBACrB7B,OAAA;UACE8B,SAAS,EAAEhC,CAAC,CAACwC,KAAM;UACnBC,WAAW,EAAC,0BAA0B;UACtCrB,KAAK,EAAEP,KAAM;UACb6B,QAAQ,EAAEzB;QAAkB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,EACRtB,KAAK,iBAAIb,OAAA;UAAK8B,SAAS,EAAEhC,CAAC,CAACe,KAAM;UAAAgB,QAAA,EAAEhB;QAAK;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEhDnC,OAAA;UAAQ8B,SAAS,EAAEhC,CAAC,CAAC2C,GAAI;UAACC,OAAO,EAAEvB,iBAAkB;UAAAU,QAAA,EAAC;QAEtD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC3B,EAAA,CAlDWD,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}